"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[137],{9137:function(e,r,t){t.d(r,{V:function(){return u},R:function(){return h}});var o=t(7437),c=t(2265),a=t(3325),n=t(7440);let s="https://twlegtqcyydgjkycxngw.supabase.co",d="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InR3bGVndHFjeXlkZ2preWN4bmd3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcxNzQ2MDAsImV4cCI6MjA3Mjc1MDYwMH0.uD9GD_ksHCDgmmPAgR7fcLUAJHRJtTkT-J-SVjU-WR0";if(!s||!d)throw Error("Missing Supabase environment variables. Please set NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY");function i(){console.log("Supabase: Products cache cleared")}(0,n.eI)(s,d),i(),console.log("\uD83D\uDE80 Cache buster timestamp:",Date.now());let l=(0,c.createContext)(void 0),u=e=>{let{children:r}=e,[t,n]=(0,c.useState)([]);(0,c.useEffect)(()=>{(async()=>{try{console.log("ProductContext: Loading products directly from server...");let e=await a.k.getProducts();console.log("ProductContext: Loaded products from server:",e.length),n(e)}catch(e){console.error("ProductContext: Error loading products:",e),n([])}})();let e=e=>{let r=e.detail;r&&r.products&&n(r.products)},r=e=>{let r=e.detail;r&&r.products&&n(r.products)};return window.addEventListener("data-updated",e),window.addEventListener("data-sync",r),()=>{window.removeEventListener("data-updated",e),window.removeEventListener("data-sync",r)}},[]);let s=async e=>{console.log("\uD83D\uDD27 ProductContext: addProduct called with:",e);try{console.log("\uD83D\uDD27 ProductContext: Calling backendService.addProduct...");let r=await a.k.addProduct(e);console.log("\uD83D\uDD27 ProductContext: backendService.addProduct result:",r),r?(console.log("\uD83D\uDD27 ProductContext: Product added successfully, refreshing..."),await h(),console.log("✅ ProductContext: Product added and refreshed successfully")):console.error("❌ ProductContext: backendService.addProduct returned null")}catch(e){console.error("❌ ProductContext: Error in addProduct:",e)}},d=async(e,r)=>{try{let t=r.stock&&"object"==typeof r.stock?Object.values(r.stock).reduce((e,r)=>r&&"object"==typeof r?e+Object.values(r).reduce((e,r)=>e+("number"==typeof r?r:0),0):e,0):0,o={...r,inStock:t>0};if(console.log("ProductContext: Updating product",e,o.name,"Stock:",t,"InStock:",o.inStock),await a.k.updateProduct(e,o))console.log("✅ ProductContext: Product updated successfully, refreshing..."),await h(),console.log("✅ ProductContext: Products refreshed successfully");else throw console.error("❌ ProductContext: Failed to update product - backendService returned null"),Error("Failed to update product")}catch(e){throw console.error("❌ ProductContext: Error updating product:",e),e}},u=async e=>{try{console.log("ProductContext: Deleting product:",e),await a.k.deleteProduct(e)?(console.log("ProductContext: Product deleted successfully:",e),await h()):console.error("ProductContext: Failed to delete product:",e)}catch(e){console.error("ProductContext: Error deleting product:",e)}},h=async()=>{try{console.log("ProductContext: Refreshing products from server..."),i();let e=await a.k.getProducts();console.log("ProductContext: Refreshed products from server:",e.length),n(e),window.dispatchEvent(new CustomEvent("data-sync",{detail:{products:e}}))}catch(e){console.error("ProductContext: Error refreshing products:",e)}},p=async()=>{if(0===t.length){let e=[{id:"1",name:"OBSIDIAN HOODIE BLACK",price:4500,originalPrice:5e3,image:"https://images.unsplash.com/photo-1556821840-3a63f95609a7?w=500&h=600&fit=crop",description:"Premium black hoodie with embroidered OBSIDIAN logo. Made from 100% cotton for ultimate comfort.",category:"Hoodies",sizes:["S","M","L","XL"],colors:["Black"],inStock:!0,rating:4.9,reviews:127,stock:{S:{Black:15},M:{Black:20},L:{Black:18},XL:{Black:12}},sku:"OBS-HOODIE-001",weight:.8,tags:["hoodie","black","premium"],featured:!0,createdAt:new Date("2025-01-01"),updatedAt:new Date("2025-01-15")},{id:"2",name:"OBSIDIAN TEE WHITE",price:2500,originalPrice:3e3,image:"https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?w=500&h=600&fit=crop",description:"Premium white t-shirt with subtle OBSIDIAN branding. 100% cotton oversized fit.",category:"T-Shirts",sizes:["S","M","L","XL"],colors:["White","Black"],inStock:!0,rating:4.8,reviews:89,stock:{S:{White:25,Black:20},M:{White:30,Black:25},L:{White:22,Black:18},XL:{White:18,Black:15}},sku:"OBS-TEE-002",weight:.3,tags:["tshirt","white","black"],featured:!1,createdAt:new Date("2025-01-05"),updatedAt:new Date("2025-01-10")}];for(let r of e){let{id:e,...t}=r;await a.k.addProduct(t)}n(e)}};return(0,o.jsx)(l.Provider,{value:{products:t,setProducts:n,addProduct:s,updateProduct:d,deleteProduct:u,getProduct:e=>t.find(r=>r.id===e),initializeDefaultProducts:p,refreshProducts:h},children:r})},h=()=>{let e=(0,c.useContext)(l);if(void 0===e)throw Error("useAdminProducts must be used within an AdminProductProvider");return e}},3325:function(e,r,t){t.d(r,{k:function(){return a}});var o=t(2601);class c{getApiUrl(e){return"".concat(this.baseUrl).concat(e)}isBrowser(){return"undefined"!=typeof fetch}getAuthHeaders(){let e=o.env.NEXT_PUBLIC_API_AUTH_TOKEN||"obsidian-api-token-2025";return console.log("\uD83D\uDD27 BackendService: Using auth token:",e),{Authorization:"Bearer ".concat(e),"Content-Type":"application/json"}}async getProducts(){try{let e=await fetch(this.getApiUrl("/products"),{method:"GET",headers:{"Content-Type":"application/json","Cache-Control":"max-age=30"},next:{revalidate:30}});if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));let r=await e.json();if(r.success)return console.log("BackendService: Fetched",r.count,"products"),r.data||[];return console.error("BackendService: Failed to fetch products:",r.error),[]}catch(e){return console.error("BackendService: Error fetching products:",e),[]}}async getProduct(e){try{let r=await fetch(this.getApiUrl("/products/".concat(e))),t=await r.json();if(t.success)return console.log("BackendService: Fetched product:",e),t.data;return console.error("BackendService: Failed to fetch product:",t.error),null}catch(e){return console.error("BackendService: Error fetching product:",e),null}}async addProduct(e){try{console.log("\uD83D\uDD27 BackendService: addProduct called with:",e),console.log("\uD83D\uDD27 BackendService: Product price type:",typeof e.price,"Value:",e.price),console.log("\uD83D\uDD27 BackendService: JSON stringified product:",JSON.stringify(e,null,2)),console.log("\uD83D\uDD27 BackendService: API URL:",this.getApiUrl("/products")),console.log("\uD83D\uDD27 BackendService: Auth headers:",this.getAuthHeaders());let r=await fetch(this.getApiUrl("/products"),{method:"POST",headers:this.getAuthHeaders(),body:JSON.stringify(e)});console.log("\uD83D\uDD27 BackendService: Response status:",r.status),console.log("\uD83D\uDD27 BackendService: Response ok:",r.ok);let t=await r.json();if(console.log("\uD83D\uDD27 BackendService: Response data:",t),t.success)return console.log("✅ BackendService: Created product:",t.data.id),t.data;return console.error("❌ BackendService: Failed to create product:",t.error),null}catch(e){return console.error("❌ BackendService: Error creating product:",e),null}}async updateProduct(e,r){try{let t=await fetch(this.getApiUrl("/products/".concat(e)),{method:"PUT",headers:this.getAuthHeaders(),body:JSON.stringify(r)}),o=await t.json();if(o.success)return console.log("BackendService: Updated product:",e),o.data;return console.error("BackendService: Failed to update product:",o.error),null}catch(e){return console.error("BackendService: Error updating product:",e),null}}async deleteProduct(e){try{let r=await fetch(this.getApiUrl("/products/".concat(e)),{method:"DELETE",headers:this.getAuthHeaders()}),t=await r.json();if(t.success)return console.log("BackendService: Deleted product:",e),!0;return console.error("BackendService: Failed to delete product:",t.error),!1}catch(e){return console.error("BackendService: Error deleting product:",e),!1}}async getOrders(){try{let e=await fetch(this.getApiUrl("/orders"),{method:"GET",headers:{"Content-Type":"application/json","Cache-Control":"max-age=30"},next:{revalidate:30}});if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));let r=e.headers.get("content-type");if(!r||!r.includes("application/json")){let t=await e.text();return console.error("BackendService: Received non-JSON response:",{status:e.status,contentType:r,text:t.substring(0,200)}),[]}let t=await e.json();if(t.success)return console.log("BackendService: Fetched",t.count,"orders"),t.data||[];return console.error("BackendService: Failed to fetch orders:",t.error),[]}catch(e){return console.error("BackendService: Error fetching orders:",e),[]}}async getOrder(e){try{let r=await fetch(this.getApiUrl("/orders/".concat(e))),t=await r.json();if(t.success)return console.log("BackendService: Fetched order:",e),t.data;return console.error("BackendService: Failed to fetch order:",t.error),null}catch(e){return console.error("BackendService: Error fetching order:",e),null}}async addOrder(e){try{let r=await fetch(this.getApiUrl("/orders"),{method:"POST",headers:this.getAuthHeaders(),body:JSON.stringify(e)}),t=await r.json();if(t.success)return console.log("BackendService: Created order:",t.data.id),t.data;return console.error("BackendService: Failed to create order:",t.error),null}catch(e){return console.error("BackendService: Error creating order:",e),null}}async updateOrder(e,r){try{let t=await fetch(this.getApiUrl("/orders/".concat(e)),{method:"PUT",headers:this.getAuthHeaders(),body:JSON.stringify(r)}),o=await t.json();if(o.success)return console.log("BackendService: Updated order:",e),o.data;return console.error("BackendService: Failed to update order:",o.error),null}catch(e){return console.error("BackendService: Error updating order:",e),null}}async deleteOrder(e){try{let r=await fetch(this.getApiUrl("/orders/".concat(e)),{method:"DELETE",headers:this.getAuthHeaders()}),t=await r.json();if(t.success)return console.log("BackendService: Deleted order:",e),!0;return console.error("BackendService: Failed to delete order:",t.error),!1}catch(e){return console.error("BackendService: Error deleting order:",e),!1}}async getCustomers(){try{let e=await fetch(this.getApiUrl("/customers")),r=await e.json();if(r.success)return console.log("BackendService: Fetched",r.count,"customers"),r.data||[];return console.error("BackendService: Failed to fetch customers:",r.error),[]}catch(e){return console.error("BackendService: Error fetching customers:",e),[]}}async addCustomer(e){try{let r=await fetch(this.getApiUrl("/customers"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),t=await r.json();if(t.success)return console.log("BackendService: Created customer:",t.data.id),t.data;return console.error("BackendService: Failed to create customer:",t.error),null}catch(e){return console.error("BackendService: Error creating customer:",e),null}}async getWilayaTariffs(){try{let e=await fetch(this.getApiUrl("/wilaya")),r=await e.json();if(r.success)return console.log("BackendService: Fetched",r.count,"wilaya tariffs"),r.data||[];return console.error("BackendService: Failed to fetch wilaya tariffs:",r.error),[]}catch(e){return console.error("BackendService: Error fetching wilaya tariffs:",e),[]}}async updateWilayaTariffs(e){try{let r=await fetch(this.getApiUrl("/wilaya"),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),t=await r.json();if(t.success)return console.log("BackendService: Updated wilaya tariffs"),!0;return console.error("BackendService: Failed to update wilaya tariffs:",t.error),!1}catch(e){return console.error("BackendService: Error updating wilaya tariffs:",e),!1}}constructor(){this.baseUrl="/api"}}let a=new c}}]);