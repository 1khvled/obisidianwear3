"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[23],{7023:function(e,r,t){t.r(r),t.d(r,{ProductProvider:function(){return i},useProducts:function(){return s}});var o=t(7437),c=t(2265),a=t(3325);let n=(0,c.createContext)(void 0),i=e=>{let{children:r}=e,[t,i]=(0,c.useState)([]);(0,c.useEffect)(()=>{(async()=>{try{console.log("ProductContext: Loading products...");let e=await a.k.getProducts();console.log("ProductContext: Loaded products:",e.length),i(e)}catch(e){console.error("ProductContext: Error loading products:",e),0===t.length&&i([])}})();let e=e=>{let r=e.detail;r&&r.products&&i(r.products)},r=e=>{let r=e.detail;r&&r.products&&i(r.products)};return window.addEventListener("data-updated",e),window.addEventListener("data-sync",r),()=>{window.removeEventListener("data-updated",e),window.removeEventListener("data-sync",r)}},[]);let s=async e=>{let r=await a.k.addProduct(e);r&&i(e=>[...e,r])},d=async(e,r)=>{let t=r.stock?Object.values(r.stock).reduce((e,r)=>e+Object.values(r).reduce((e,r)=>e+r,0),0):0,o={...r,inStock:t>0};console.log("ProductContext: Updating product",e,o.name,"Stock:",t,"InStock:",o.inStock);let c=await a.k.updateProduct(e,o);c&&i(r=>r.map(r=>r.id===e?c:r))},l=async e=>{try{console.log("ProductContext: Deleting product:",e),await a.k.deleteProduct(e)?(console.log("ProductContext: Product deleted successfully:",e),i(r=>r.filter(r=>r.id!==e))):console.error("ProductContext: Failed to delete product:",e)}catch(e){console.error("ProductContext: Error deleting product:",e)}},u=async()=>{if(0===t.length){let e=[{id:"1",name:"OBSIDIAN HOODIE BLACK",price:4500,originalPrice:5e3,image:"https://images.unsplash.com/photo-1556821840-3a63f95609a7?w=500&h=600&fit=crop",description:"Premium black hoodie with embroidered OBSIDIAN logo. Made from 100% cotton for ultimate comfort.",category:"Hoodies",sizes:["S","M","L","XL"],colors:["Black"],inStock:!0,rating:4.9,reviews:127,stock:{S:{Black:15},M:{Black:20},L:{Black:18},XL:{Black:12}},sku:"OBS-HOODIE-001",weight:.8,tags:["hoodie","black","premium"],featured:!0,createdAt:new Date("2025-01-01"),updatedAt:new Date("2025-01-15")},{id:"2",name:"OBSIDIAN TEE WHITE",price:2500,originalPrice:3e3,image:"https://images.unsplash.com/photo-1521572163474-6864f9cf17ab?w=500&h=600&fit=crop",description:"Premium white t-shirt with subtle OBSIDIAN branding. 100% cotton oversized fit.",category:"T-Shirts",sizes:["S","M","L","XL"],colors:["White","Black"],inStock:!0,rating:4.8,reviews:89,stock:{S:{White:25,Black:20},M:{White:30,Black:25},L:{White:22,Black:18},XL:{White:18,Black:15}},sku:"OBS-TEE-002",weight:.3,tags:["tshirt","white","black"],featured:!1,createdAt:new Date("2025-01-05"),updatedAt:new Date("2025-01-10")}];for(let r of e){let{id:e,...t}=r;await a.k.addProduct(t)}i(e)}};return(0,o.jsx)(n.Provider,{value:{products:t,setProducts:i,addProduct:s,updateProduct:d,deleteProduct:l,getProduct:e=>t.find(r=>r.id===e),initializeDefaultProducts:u},children:r})},s=()=>{let e=(0,c.useContext)(n);if(void 0===e)throw Error("useProducts must be used within a ProductProvider");return e}},3325:function(e,r,t){t.d(r,{k:function(){return c}}),t(2601);class o{getApiUrl(e){return"".concat(this.baseUrl).concat(e)}isBrowser(){return"undefined"!=typeof fetch}async getProducts(){try{let e=await fetch(this.getApiUrl("/products"),{method:"GET",headers:{"Content-Type":"application/json","Cache-Control":"max-age=30"},next:{revalidate:30}});if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));let r=await e.json();if(r.success)return console.log("BackendService: Fetched",r.count,"products"),r.data||[];return console.error("BackendService: Failed to fetch products:",r.error),[]}catch(e){return console.error("BackendService: Error fetching products:",e),[]}}async getProduct(e){try{let r=await fetch(this.getApiUrl("/products/".concat(e))),t=await r.json();if(t.success)return console.log("BackendService: Fetched product:",e),t.data;return console.error("BackendService: Failed to fetch product:",t.error),null}catch(e){return console.error("BackendService: Error fetching product:",e),null}}async addProduct(e){try{let r=await fetch(this.getApiUrl("/products"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),t=await r.json();if(t.success)return console.log("BackendService: Created product:",t.data.id),t.data;return console.error("BackendService: Failed to create product:",t.error),null}catch(e){return console.error("BackendService: Error creating product:",e),null}}async updateProduct(e,r){try{let t=await fetch(this.getApiUrl("/products/".concat(e)),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)}),o=await t.json();if(o.success)return console.log("BackendService: Updated product:",e),o.data;return console.error("BackendService: Failed to update product:",o.error),null}catch(e){return console.error("BackendService: Error updating product:",e),null}}async deleteProduct(e){try{let r=await fetch(this.getApiUrl("/products/".concat(e)),{method:"DELETE"}),t=await r.json();if(t.success)return console.log("BackendService: Deleted product:",e),!0;return console.error("BackendService: Failed to delete product:",t.error),!1}catch(e){return console.error("BackendService: Error deleting product:",e),!1}}async getOrders(){try{let e=await fetch(this.getApiUrl("/orders"),{method:"GET",headers:{"Content-Type":"application/json","Cache-Control":"max-age=30"},next:{revalidate:30}});if(!e.ok)throw Error("HTTP error! status: ".concat(e.status));let r=e.headers.get("content-type");if(!r||!r.includes("application/json")){let t=await e.text();return console.error("BackendService: Received non-JSON response:",{status:e.status,contentType:r,text:t.substring(0,200)}),[]}let t=await e.json();if(t.success)return console.log("BackendService: Fetched",t.count,"orders"),t.data||[];return console.error("BackendService: Failed to fetch orders:",t.error),[]}catch(e){return console.error("BackendService: Error fetching orders:",e),[]}}async getOrder(e){try{let r=await fetch(this.getApiUrl("/orders/".concat(e))),t=await r.json();if(t.success)return console.log("BackendService: Fetched order:",e),t.data;return console.error("BackendService: Failed to fetch order:",t.error),null}catch(e){return console.error("BackendService: Error fetching order:",e),null}}async addOrder(e){try{let r=await fetch(this.getApiUrl("/orders"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),t=await r.json();if(t.success)return console.log("BackendService: Created order:",t.data.id),t.data;return console.error("BackendService: Failed to create order:",t.error),null}catch(e){return console.error("BackendService: Error creating order:",e),null}}async updateOrder(e,r){try{let t=await fetch(this.getApiUrl("/orders/".concat(e)),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)}),o=await t.json();if(o.success)return console.log("BackendService: Updated order:",e),o.data;return console.error("BackendService: Failed to update order:",o.error),null}catch(e){return console.error("BackendService: Error updating order:",e),null}}async deleteOrder(e){try{let r=await fetch(this.getApiUrl("/orders/".concat(e)),{method:"DELETE"}),t=await r.json();if(t.success)return console.log("BackendService: Deleted order:",e),!0;return console.error("BackendService: Failed to delete order:",t.error),!1}catch(e){return console.error("BackendService: Error deleting order:",e),!1}}async getCustomers(){try{let e=await fetch(this.getApiUrl("/customers")),r=await e.json();if(r.success)return console.log("BackendService: Fetched",r.count,"customers"),r.data||[];return console.error("BackendService: Failed to fetch customers:",r.error),[]}catch(e){return console.error("BackendService: Error fetching customers:",e),[]}}async addCustomer(e){try{let r=await fetch(this.getApiUrl("/customers"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),t=await r.json();if(t.success)return console.log("BackendService: Created customer:",t.data.id),t.data;return console.error("BackendService: Failed to create customer:",t.error),null}catch(e){return console.error("BackendService: Error creating customer:",e),null}}async getWilayaTariffs(){try{let e=await fetch(this.getApiUrl("/wilaya")),r=await e.json();if(r.success)return console.log("BackendService: Fetched",r.count,"wilaya tariffs"),r.data||[];return console.error("BackendService: Failed to fetch wilaya tariffs:",r.error),[]}catch(e){return console.error("BackendService: Error fetching wilaya tariffs:",e),[]}}async updateWilayaTariffs(e){try{let r=await fetch(this.getApiUrl("/wilaya"),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),t=await r.json();if(t.success)return console.log("BackendService: Updated wilaya tariffs"),!0;return console.error("BackendService: Failed to update wilaya tariffs:",t.error),!1}catch(e){return console.error("BackendService: Error updating wilaya tariffs:",e),!1}}constructor(){this.baseUrl="/api"}}let c=new o}}]);