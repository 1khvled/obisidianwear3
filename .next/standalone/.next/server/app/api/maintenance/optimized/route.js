"use strict";(()=>{var e={};e.id=377,e.ids=[377],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},5477:e=>{e.exports=require("punycode")},2781:e=>{e.exports=require("stream")},7310:e=>{e.exports=require("url")},9796:e=>{e.exports=require("zlib")},3286:(e,t,a)=>{a.r(t),a.d(t,{headerHooks:()=>y,originalPathname:()=>_,patchFetch:()=>j,requestAsyncStorage:()=>f,routeModule:()=>g,serverHooks:()=>w,staticGenerationAsyncStorage:()=>S,staticGenerationBailout:()=>M});var n={};a.r(n),a.d(n,{DELETE:()=>m,GET:()=>d,POST:()=>h,PUT:()=>p});var s=a(5419),r=a(9108),i=a(9678),c=a(8070),o=a(4750);class u{async getMaintenanceStatus(){let e=Date.now();if(this.cache&&e-this.lastFetch<this.cacheTimeout)return this.cache;try{if(!o.supabase)return console.error("Supabase client not initialized"),{is_maintenance:!1,drop_date:null};let{data:t,error:a}=await o.supabase.from("maintenance_status").select("*").eq("id","maintenance").single();if(a)throw a;let n=t||{id:"maintenance",is_maintenance:!1,drop_date:new Date(Date.now()+2592e6).toISOString(),updated_at:new Date().toISOString()};return this.cache=n,this.lastFetch=e,n}catch(e){return console.error("Failed to fetch maintenance status:",e),this.cache||{id:"maintenance",is_maintenance:!1,drop_date:new Date(Date.now()+2592e6).toISOString(),updated_at:new Date().toISOString()}}}async setMaintenanceStatus(e){try{let t="offline"===e,a={id:"maintenance",is_maintenance:t,drop_date:this.cache?.drop_date||new Date(Date.now()+2592e6).toISOString(),updated_at:new Date().toISOString()};return this.cache=a,this.lastFetch=Date.now(),setTimeout(async()=>{try{if(!o.supabase){console.error("Supabase client not initialized");return}let{error:e}=await o.supabase.from("maintenance_status").update({is_maintenance:t,updated_at:new Date().toISOString()}).eq("id","maintenance");e?console.error("Maintenance status update error:",e):console.log("Maintenance status updated successfully")}catch(e){console.error("Background maintenance update failed:",e)}},0),!0}catch(e){return console.error("Failed to set maintenance status:",e),!1}}async toggleMaintenanceStatus(){let e=(await this.getMaintenanceStatus()).is_maintenance?"online":"offline";return await this.setMaintenanceStatus(e)}async getMaintenanceAnalytics(){try{if(!o.supabase)return console.error("Supabase client not initialized"),null;let{data:e,error:t}=await o.supabase.rpc("get_maintenance_analytics");if(t)throw t;return e?.[0]||null}catch(e){return console.error("Failed to get maintenance analytics:",e),null}}clearCache(){this.cache=null,this.lastFetch=0}getCachedStatus(){let e=Date.now();return this.cache&&e-this.lastFetch<this.cacheTimeout?this.cache:null}constructor(){this.cache=null,this.cacheTimeout=5e3,this.lastFetch=0}}let l=new u;async function d(e){try{let e=await l.getMaintenanceStatus();return c.Z.json({success:!0,status:e,message:"Maintenance status retrieved successfully (optimized)"})}catch(e){return console.error("Maintenance status fetch error:",e),c.Z.json({error:"Failed to fetch maintenance status"},{status:500})}}async function h(e){try{let{status:t}=await e.json();if(!t||!["online","offline"].includes(t))return c.Z.json({error:'Invalid status. Must be "online" or "offline"'},{status:400});if(await l.setMaintenanceStatus(t))return c.Z.json({success:!0,status:{status:t,updated_at:new Date().toISOString()},message:`Maintenance status set to ${t} successfully`});return c.Z.json({error:"Failed to update maintenance status"},{status:500})}catch(e){return console.error("Maintenance status update error:",e),c.Z.json({error:"Failed to update maintenance status"},{status:500})}}async function p(e){try{let{action:t}=await e.json();if("toggle"!==t)return c.Z.json({error:'Invalid action. Use "toggle" or specify status in POST'},{status:400});if(!await l.toggleMaintenanceStatus())return c.Z.json({error:"Failed to toggle maintenance status"},{status:500});{let e=await l.getMaintenanceStatus();return c.Z.json({success:!0,status:e,message:"Maintenance status toggled successfully"})}}catch(e){return console.error("Maintenance toggle error:",e),c.Z.json({error:"Failed to toggle maintenance status"},{status:500})}}async function m(e){try{return l.clearCache(),c.Z.json({success:!0,message:"Maintenance cache cleared successfully"})}catch(e){return console.error("Cache clear error:",e),c.Z.json({error:"Failed to clear cache"},{status:500})}}let g=new s.AppRouteRouteModule({definition:{kind:r.x.APP_ROUTE,page:"/api/maintenance/optimized/route",pathname:"/api/maintenance/optimized",filename:"route",bundlePath:"app/api/maintenance/optimized/route"},resolvedPagePath:"C:\\Users\\HP\\Desktop\\projectt\\src\\app\\api\\maintenance\\optimized\\route.ts",nextConfigOutput:"standalone",userland:n}),{requestAsyncStorage:f,staticGenerationAsyncStorage:S,serverHooks:w,headerHooks:y,staticGenerationBailout:M}=g,_="/api/maintenance/optimized/route";function j(){return(0,i.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:S})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),n=t.X(0,[638,206,409,750],()=>a(3286));module.exports=n})();