"use strict";(()=>{var e={};e.id=990,e.ids=[990],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},5477:e=>{e.exports=require("punycode")},2781:e=>{e.exports=require("stream")},7310:e=>{e.exports=require("url")},9796:e=>{e.exports=require("zlib")},7430:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>O,originalPathname:()=>j,patchFetch:()=>S,requestAsyncStorage:()=>y,routeModule:()=>f,serverHooks:()=>w,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>_});var a={};t.r(a),t.d(a,{GET:()=>p,PATCH:()=>m,POST:()=>l,PUT:()=>h});var s=t(5419),o=t(9108),i=t(9678),n=t(8070),c=t(4750);class u{async createOrder(e){try{let r={...e,id:Date.now(),created_at:new Date().toISOString(),updated_at:new Date().toISOString()};return setTimeout(async()=>{try{let{data:r,error:t}=await c.OQ.from("orders").insert([e]).select().single();t?console.error("Order creation error:",t):console.log("Order created successfully:",r)}catch(e){console.error("Background order creation failed:",e)}},0),r}catch(e){throw console.error("Order creation failed:",e),e}}async getOrders(e=50,r=0){let t=`orders_${e}_${r}`,a=this.cache.get(t);if(a&&Date.now()-a.timestamp<this.cacheTimeout)return a.data;try{let{data:a,error:s}=await c.OQ.from("orders").select("*").order("created_at",{ascending:!1}).range(r,r+e-1);if(s)throw s;return this.cache.set(t,{data:a||[],timestamp:Date.now()}),a||[]}catch(e){return console.error("Failed to fetch orders:",e),[]}}async updateOrderStatus(e,r){try{let{error:t}=await c.OQ.from("orders").update({status:r,updated_at:new Date().toISOString()}).eq("id",e);if(t)throw t;return this.clearCache(),!0}catch(e){return console.error("Failed to update order status:",e),!1}}async bulkUpdateOrderStatus(e,r){try{let{data:t,error:a}=await c.OQ.rpc("bulk_update_order_status",{order_ids:e,new_status:r});if(a)throw a;return this.clearCache(),t||0}catch(e){return console.error("Bulk update failed:",e),0}}async searchOrders(e,r,t=50,a=0){try{let{data:s,error:o}=await c.OQ.rpc("search_orders",{search_term:e,order_status:r,limit_count:t,offset_count:a});if(o)throw o;return s||[]}catch(e){return console.error("Search orders failed:",e),[]}}async getOrderAnalytics(){try{let{data:e,error:r}=await c.OQ.rpc("get_order_analytics");if(r)throw r;return e?.[0]||null}catch(e){return console.error("Failed to get order analytics:",e),null}}clearCache(){this.cache.clear()}getCachedData(e){let r=this.cache.get(e);return r&&Date.now()-r.timestamp<this.cacheTimeout?r.data:null}constructor(){this.cache=new Map,this.cacheTimeout=5e3}}let d=new u;async function l(e){try{let r=await e.json();if(!r.customer_id||!r.items||!r.total_amount)return n.Z.json({error:"Missing required fields: customer_id, items, total_amount"},{status:400});let t=await d.createOrder({customer_id:r.customer_id,items:r.items,total_amount:r.total_amount,status:r.status||"pending"});return n.Z.json({success:!0,order:t,message:"Order created successfully (optimized)"})}catch(e){return console.error("Order creation error:",e),n.Z.json({error:"Failed to create order"},{status:500})}}async function p(e){try{let r;let{searchParams:t}=new URL(e.url),a=parseInt(t.get("limit")||"50"),s=parseInt(t.get("offset")||"0"),o=t.get("search")||void 0,i=t.get("status")||void 0;return r=o||i?await d.searchOrders(o,i,a,s):await d.getOrders(a,s),n.Z.json({success:!0,orders:r,count:r.length})}catch(e){return console.error("Order fetch error:",e),n.Z.json({error:"Failed to fetch orders"},{status:500})}}async function h(e){try{let{orderId:r,status:t}=await e.json();if(!r||!t)return n.Z.json({error:"Missing required fields: orderId, status"},{status:400});if(await d.updateOrderStatus(r,t))return n.Z.json({success:!0,message:"Order status updated successfully"});return n.Z.json({error:"Failed to update order status"},{status:500})}catch(e){return console.error("Order update error:",e),n.Z.json({error:"Failed to update order"},{status:500})}}async function m(e){try{let{orderIds:r,status:t}=await e.json();if(!r||!Array.isArray(r)||!t)return n.Z.json({error:"Missing required fields: orderIds (array), status"},{status:400});let a=await d.bulkUpdateOrderStatus(r,t);return n.Z.json({success:!0,updatedCount:a,message:`Updated ${a} orders successfully`})}catch(e){return console.error("Bulk update error:",e),n.Z.json({error:"Failed to bulk update orders"},{status:500})}}let f=new s.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/orders/optimized/route",pathname:"/api/orders/optimized",filename:"route",bundlePath:"app/api/orders/optimized/route"},resolvedPagePath:"C:\\Users\\HP\\Desktop\\projectt\\src\\app\\api\\orders\\optimized\\route.ts",nextConfigOutput:"standalone",userland:a}),{requestAsyncStorage:y,staticGenerationAsyncStorage:g,serverHooks:w,headerHooks:O,staticGenerationBailout:_}=f,j="/api/orders/optimized/route";function S(){return(0,i.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:g})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[638,206,409,750],()=>t(7430));module.exports=a})();