"use strict";(()=>{var e={};e.id=146,e.ids=[146],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2773:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>g,originalPathname:()=>O,patchFetch:()=>f,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>P});var s={};t.r(s),t.d(s,{GET:()=>c,POST:()=>i});var o=t(5419),a=t(9108),n=t(9678),u=t(8070);let d=[];async function c(){try{return console.log("Orders API: GET request - returning",d.length,"orders"),u.Z.json({success:!0,data:d,count:d.length,timestamp:Date.now()})}catch(e){return console.error("Orders API: GET error:",e),u.Z.json({success:!1,error:"Failed to fetch orders"},{status:500})}}async function i(e){try{let r=await e.json();if(!r.customer||!r.items||!r.total)return u.Z.json({success:!1,error:"Customer, items, and total are required"},{status:400});let t={id:`ORD-${Date.now()}`,...r,orderDate:new Date,status:"pending",paymentStatus:"pending"};return d.push(t),console.log("Orders API: POST request - created order:",t.id),u.Z.json({success:!0,data:t,message:"Order created successfully",timestamp:Date.now()},{status:201})}catch(e){return console.error("Orders API: POST error:",e),u.Z.json({success:!1,error:"Failed to create order"},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/orders/route",pathname:"/api/orders",filename:"route",bundlePath:"app/api/orders/route"},resolvedPagePath:"C:\\Users\\HP\\Desktop\\projectt\\src\\app\\api\\orders\\route.ts",nextConfigOutput:"standalone",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:h,headerHooks:g,staticGenerationBailout:P}=p,O="/api/orders/route";function f(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[638,206],()=>t(2773));module.exports=s})();