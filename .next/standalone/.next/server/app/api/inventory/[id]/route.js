"use strict";(()=>{var e={};e.id=364,e.ids=[364],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},5477:e=>{e.exports=require("punycode")},2781:e=>{e.exports=require("stream")},7310:e=>{e.exports=require("url")},9796:e=>{e.exports=require("zlib")},8880:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>m,originalPathname:()=>h,patchFetch:()=>x,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>y,staticGenerationAsyncStorage:()=>v,staticGenerationBailout:()=>P});var o={};r.r(o),r.d(o,{PUT:()=>c,runtime:()=>p});var s=r(5419),n=r(9108),a=r(9678),i=r(8070),u=r(4750);let p="nodejs";async function c(e,{params:t}){try{let{id:r}=t,o=await e.json();if(console.log("Inventory API: PUT request for product:",r,o),!o.stock&&!o.inStock)return i.Z.json({success:!1,error:"Stock data or inStock status is required"},{status:400});let s=await (0,u.e9)(r,o);return console.log("Inventory API: Successfully updated inventory for product:",r),i.Z.json({success:!0,data:s,message:"Inventory updated successfully",timestamp:Date.now()})}catch(e){return console.error("Inventory API: PUT error:",e),i.Z.json({success:!1,error:"Failed to update inventory"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/inventory/[id]/route",pathname:"/api/inventory/[id]",filename:"route",bundlePath:"app/api/inventory/[id]/route"},resolvedPagePath:"C:\\Users\\HP\\Desktop\\projectt\\src\\app\\api\\inventory\\[id]\\route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:l,staticGenerationAsyncStorage:v,serverHooks:y,headerHooks:m,staticGenerationBailout:P}=d,h="/api/inventory/[id]/route";function x(){return(0,a.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:v})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[638,720,750],()=>r(8880));module.exports=o})();