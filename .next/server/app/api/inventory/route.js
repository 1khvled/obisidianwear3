"use strict";(()=>{var e={};e.id=666,e.ids=[666],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},5477:e=>{e.exports=require("punycode")},2781:e=>{e.exports=require("stream")},7310:e=>{e.exports=require("url")},9796:e=>{e.exports=require("zlib")},9576:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>y,originalPathname:()=>x,patchFetch:()=>g,requestAsyncStorage:()=>d,routeModule:()=>l,serverHooks:()=>h,staticGenerationAsyncStorage:()=>v,staticGenerationBailout:()=>m});var o={};r.r(o),r.d(o,{GET:()=>c,runtime:()=>p});var n=r(5419),s=r(9108),a=r(9678),i=r(8070),u=r(4750);let p="nodejs";async function c(){try{console.log("Inventory API: GET request started");let e=await (0,u.$v)();return console.log("Inventory API: Returning inventory for",e.length,"products"),i.Z.json({success:!0,data:e,count:e.length,timestamp:Date.now()})}catch(e){return console.error("Inventory API: GET error:",e),i.Z.json({success:!1,error:"Failed to fetch inventory"},{status:500})}}let l=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/inventory/route",pathname:"/api/inventory",filename:"route",bundlePath:"app/api/inventory/route"},resolvedPagePath:"C:\\Users\\HP\\Desktop\\projectt\\src\\app\\api\\inventory\\route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:d,staticGenerationAsyncStorage:v,serverHooks:h,headerHooks:y,staticGenerationBailout:m}=l,x="/api/inventory/route";function g(){return(0,a.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:v})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[638,206,409,750],()=>r(9576));module.exports=o})();